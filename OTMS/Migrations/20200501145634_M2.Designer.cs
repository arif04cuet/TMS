// <auto-generated />
using System;
using Infrastructure.Data.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace OTMS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200501145634_M2")]
    partial class M2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Module.Asset.Entities.Accessory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Available")
                        .HasColumnType("int");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchaseCost")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MediaId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Accessory","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.AccessoryUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccessoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IssuedToUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryId");

                    b.HasIndex("IssuedToUserId");

                    b.ToTable("AccessoryUser","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AssetModelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequestable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchaseCost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.Property<int>("Warrantly")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetModelId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MediaId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Asset","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.AssetAudit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NextAuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("AssetAudit","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.AssetMaintenance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWarrantyImprovement")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("SupplierId");

                    b.ToTable("AssetMaintenance","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.AssetModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetModelId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DepreciationId")
                        .HasColumnType("bigint");

                    b.Property<int>("Eol")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequestable")
                        .HasColumnType("bit");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssetModelId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DepreciationId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MediaId");

                    b.ToTable("AssetModel","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("EULA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequireUserConfirmation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSendEmail")
                        .HasColumnType("bit");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Category","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Component", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Available")
                        .HasColumnType("int");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchaseCost")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MediaId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Component","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.ComponentAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ComponentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IssuedToAssetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("IssuedToAssetId");

                    b.ToTable("ComponentAsset","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Consumable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchaseCost")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MediaId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Consumable","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.ConsumableUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConsumableId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IssuedToUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ConsumableId");

                    b.HasIndex("IssuedToUserId");

                    b.ToTable("ConsumableUser","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Depreciation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Depreciation","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.License", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Available")
                        .HasColumnType("int");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DepreciationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchaseCost")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DepreciationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("License","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.LicenseSeat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IssuedToAssetId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IssuedToUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("LicenseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IssuedToAssetId");

                    b.HasIndex("IssuedToUserId");

                    b.HasIndex("LicenseId");

                    b.ToTable("LicenseSeat","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Manufacturer","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Status", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Status","asset");
                });

            modelBuilder.Entity("Module.Asset.Entities.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Supplier","asset");
                });

            modelBuilder.Entity("Module.Core.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("UpazilaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("UpazilaId");

                    b.ToTable("Address","core");
                });

            modelBuilder.Entity("Module.Core.Entities.BloodGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BloodGroup","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "A+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "A-",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "B+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "B-",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "AB+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "AB-",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "O+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 8L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "O-",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Department","core");
                });

            modelBuilder.Entity("Module.Core.Entities.Designation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Designation","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Director General",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Director",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Additional Director",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deputy Director or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Assistant Director or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social services officer 1st Class Gazetted or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social services officer 2nd Class Gazetted or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 8L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Additional Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 9L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 10L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Joint Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 11L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deputy Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 12L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Honorable Guest Speaker",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("District","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Barguna",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Barishal",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bhola",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jhalokathi",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Patuakhali",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Pirojpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bandarban",
                            Version = 0L
                        },
                        new
                        {
                            Id = 8L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Brahmanbaria",
                            Version = 0L
                        },
                        new
                        {
                            Id = 9L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chandpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 10L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chattogram",
                            Version = 0L
                        },
                        new
                        {
                            Id = 11L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Cumilla",
                            Version = 0L
                        },
                        new
                        {
                            Id = 12L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Cox's Bazar",
                            Version = 0L
                        },
                        new
                        {
                            Id = 13L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Feni",
                            Version = 0L
                        },
                        new
                        {
                            Id = 14L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Khagrachhari",
                            Version = 0L
                        },
                        new
                        {
                            Id = 15L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lakshmipur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 16L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Noakhali",
                            Version = 0L
                        },
                        new
                        {
                            Id = 17L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rangamati",
                            Version = 0L
                        },
                        new
                        {
                            Id = 18L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dhaka",
                            Version = 0L
                        },
                        new
                        {
                            Id = 19L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Faridpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 20L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gazipur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 21L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gopalganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 22L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kishoreganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 23L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Madaripur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 24L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Manikganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 25L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Munshiganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 26L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Narayanganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 27L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Narsingdi",
                            Version = 0L
                        },
                        new
                        {
                            Id = 28L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rajbari",
                            Version = 0L
                        },
                        new
                        {
                            Id = 29L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Shariatpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 30L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tangail",
                            Version = 0L
                        },
                        new
                        {
                            Id = 31L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bagerhat",
                            Version = 0L
                        },
                        new
                        {
                            Id = 32L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chuadanga",
                            Version = 0L
                        },
                        new
                        {
                            Id = 33L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jashore",
                            Version = 0L
                        },
                        new
                        {
                            Id = 34L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jhenaidah",
                            Version = 0L
                        },
                        new
                        {
                            Id = 35L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Khulna",
                            Version = 0L
                        },
                        new
                        {
                            Id = 36L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kushtia",
                            Version = 0L
                        },
                        new
                        {
                            Id = 37L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Magura",
                            Version = 0L
                        },
                        new
                        {
                            Id = 38L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Meherpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 39L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Narail",
                            Version = 0L
                        },
                        new
                        {
                            Id = 40L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Satkhira",
                            Version = 0L
                        },
                        new
                        {
                            Id = 41L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jamalpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 42L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mymensingh",
                            Version = 0L
                        },
                        new
                        {
                            Id = 43L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Netrokona",
                            Version = 0L
                        },
                        new
                        {
                            Id = 44L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sherpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 45L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bogura",
                            Version = 0L
                        },
                        new
                        {
                            Id = 46L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Joypurhat",
                            Version = 0L
                        },
                        new
                        {
                            Id = 47L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Naogaon",
                            Version = 0L
                        },
                        new
                        {
                            Id = 48L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Natore",
                            Version = 0L
                        },
                        new
                        {
                            Id = 49L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chapainawabganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 50L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Pabna",
                            Version = 0L
                        },
                        new
                        {
                            Id = 51L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rajshahi",
                            Version = 0L
                        },
                        new
                        {
                            Id = 52L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sirajganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 53L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dinajpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 54L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gaibandha",
                            Version = 0L
                        },
                        new
                        {
                            Id = 55L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kurigram",
                            Version = 0L
                        },
                        new
                        {
                            Id = 56L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lalmonirhat",
                            Version = 0L
                        },
                        new
                        {
                            Id = 57L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Nilphamari",
                            Version = 0L
                        },
                        new
                        {
                            Id = 58L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Panchagarh",
                            Version = 0L
                        },
                        new
                        {
                            Id = 59L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rangpur",
                            Version = 0L
                        },
                        new
                        {
                            Id = 60L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Thakurgaon",
                            Version = 0L
                        },
                        new
                        {
                            Id = 61L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Habiganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 62L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Moulvibazar",
                            Version = 0L
                        },
                        new
                        {
                            Id = 63L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sunamganj",
                            Version = 0L
                        },
                        new
                        {
                            Id = 64L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sylhet",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Division", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Division","core");
                });

            modelBuilder.Entity("Module.Core.Entities.Education", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassingYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("University")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Education","core");
                });

            modelBuilder.Entity("Module.Core.Entities.EmailTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<byte>("Event")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplate","core");
                });

            modelBuilder.Entity("Module.Core.Entities.Gender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Gender","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Male",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Female",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Other",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Language","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bangla",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "English",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Arabic",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hindi",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.MaritalStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatus","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Married",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Un married",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Widowed",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Divorced",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Never married",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Media", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Media","core");
                });

            modelBuilder.Entity("Module.Core.Entities.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Module","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User Management",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Library Management",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Asset Management",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Office", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OfficeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpazilaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("UpazilaId");

                    b.ToTable("Office","core");
                });

            modelBuilder.Entity("Module.Core.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Permission","core");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Code = "user.create",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 101L,
                            Code = "user.update",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 102L,
                            Code = "user.view",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 104L,
                            Code = "user.list",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 103L,
                            Code = "user.delete",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 105L,
                            Code = "user.manage",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 200L,
                            Code = "role.create",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 201L,
                            Code = "role.update",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 202L,
                            Code = "role.view",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 204L,
                            Code = "role.list",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 203L,
                            Code = "role.delete",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 205L,
                            Code = "role.manage",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 300L,
                            Code = "designation.create",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 301L,
                            Code = "designation.update",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 302L,
                            Code = "designation.view",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 304L,
                            Code = "designation.list",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 303L,
                            Code = "designation.delete",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 305L,
                            Code = "designation.manage",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 400L,
                            Code = "department.create",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 401L,
                            Code = "department.update",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 402L,
                            Code = "department.view",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 404L,
                            Code = "department.list",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 403L,
                            Code = "department.delete",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 405L,
                            Code = "department.manage",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 501L,
                            Code = "profile.update",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 502L,
                            Code = "profile.view",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 505L,
                            Code = "profile.manage",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 600L,
                            Code = "book.create",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 601L,
                            Code = "book.update",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 602L,
                            Code = "book.view",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 604L,
                            Code = "book.list",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 603L,
                            Code = "book.delete",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 605L,
                            Code = "book.manage",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Manage"
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.PermissionGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PermissionGroup","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Role",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Designation",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Department",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Profile",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Book",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpiresIn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken","core");
                });

            modelBuilder.Entity("Module.Core.Entities.Religion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Religion","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Islam",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Judaism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hinduism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Christianity",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Buddhism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jainism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sikhism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 8L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Other",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Role","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrator",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Librarian",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Library Member",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PermissionId = 105L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            PermissionId = 205L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            PermissionId = 305L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            PermissionId = 405L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            PermissionId = 505L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Status", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Status","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Pending",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Approved",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Active",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "In active",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Upazila", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.ToTable("Upazila","core");
                });

            modelBuilder.Entity("Module.Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("StatusId");

                    b.ToTable("User","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Administrator",
                            IsActive = true,
                            IsDeleted = false,
                            Password = "l+0iiqNIdYjDQHR9FwJTzA==",
                            StatusId = 3L,
                            TwoFactorEnabled = false,
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.UserPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermission","core");
                });

            modelBuilder.Entity("Module.Core.Entities.UserProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BloodGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContactAddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EducationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GenderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MaritalStatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OfficeAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PermanentAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BloodGroupId");

                    b.HasIndex("ContactAddressId");

                    b.HasIndex("EducationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("MediaId");

                    b.HasIndex("OfficeAddressId");

                    b.HasIndex("PermanentAddressId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfile","core");
                });

            modelBuilder.Entity("Module.Core.Entities.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole","core");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1L,
                            UserId = 1L,
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresIn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RefreshTokenId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RefreshTokenId");

                    b.HasIndex("UserId");

                    b.ToTable("UserToken","core");
                });

            modelBuilder.Entity("Module.Library.Entities.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Author","library");
                });

            modelBuilder.Entity("Module.Library.Entities.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PublisherId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LibraryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Book","library");
                });

            modelBuilder.Entity("Module.Library.Entities.BookAuthor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthor","library");
                });

            modelBuilder.Entity("Module.Library.Entities.BookEdition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("EBookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Edition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfCopy")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPage")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("EBookId");

                    b.ToTable("BookEdition","library");
                });

            modelBuilder.Entity("Module.Library.Entities.BookFormat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BookFormat","library");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hardcover",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Paperback",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Audiobook",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ebook",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Newspaper",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Magazine",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Journal",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Library.Entities.BookIssue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BookItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConvertedFromReservationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("FineId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LibraryCardId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ConvertedFromReservationId");

                    b.HasIndex("FineId");

                    b.HasIndex("LibraryCardId");

                    b.HasIndex("LibraryId");

                    b.HasIndex("MemberId");

                    b.ToTable("BookIssue","library");
                });

            modelBuilder.Entity("Module.Library.Entities.BookItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentIssueId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfPurchage")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EditionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FormatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("IssuedToId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<float>("PurchagePrice")
                        .HasColumnType("real");

                    b.Property<long?>("RackId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReservedForId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CurrentIssueId")
                        .IsUnique()
                        .HasFilter("[CurrentIssueId] IS NOT NULL");

                    b.HasIndex("EditionId");

                    b.HasIndex("FormatId");

                    b.HasIndex("IssuedToId");

                    b.HasIndex("LibraryId");

                    b.HasIndex("MediaId");

                    b.HasIndex("RackId");

                    b.HasIndex("ReservedForId");

                    b.HasIndex("StatusId");

                    b.ToTable("BookItem","library");
                });

            modelBuilder.Entity("Module.Library.Entities.BookReservation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BookItemId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReservationById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("BookItemId");

                    b.HasIndex("LibraryId");

                    b.HasIndex("ReservationById");

                    b.HasIndex("StatusId");

                    b.ToTable("BookReservation","library");
                });

            modelBuilder.Entity("Module.Library.Entities.BookStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BookStatus","library");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Available",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Reserved",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Loned",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lost",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Library.Entities.BookSubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("SubjectId");

                    b.ToTable("BookSubject","library");
                });

            modelBuilder.Entity("Module.Library.Entities.EBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("FormatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDownloadable")
                        .HasColumnType("bit");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<long>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FormatId");

                    b.HasIndex("LibraryId");

                    b.HasIndex("MediaId");

                    b.ToTable("EBook","library");
                });

            modelBuilder.Entity("Module.Library.Entities.EBookFormat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("EBookFormat","library");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "PDF",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "ePUB",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "WordDocument",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Library.Entities.Fine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<float>("DueAmount")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.ToTable("Fine","library");
                });

            modelBuilder.Entity("Module.Library.Entities.Library", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LibrarianId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LibrarianId");

                    b.ToTable("Library","library");
                });

            modelBuilder.Entity("Module.Library.Entities.LibraryCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CardStatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("CardTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Fees")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxIssueCount")
                        .HasColumnType("int");

                    b.Property<long?>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CardStatusId");

                    b.HasIndex("CardTypeId");

                    b.HasIndex("LibraryId");

                    b.HasIndex("MemberId");

                    b.ToTable("LibraryCard","library");
                });

            modelBuilder.Entity("Module.Library.Entities.LibraryCardStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LibraryCardStatus","library");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Active",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "In active",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lost",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Library.Entities.LibraryCardType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LibraryCardType","library");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Normal",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Premium",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Library.Entities.LibraryMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentCardId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MemberSince")
                        .HasColumnType("datetime2");

                    b.Property<long>("TotalBooksCheckout")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CurrentCardId");

                    b.HasIndex("LibraryId");

                    b.HasIndex("UserId");

                    b.ToTable("LibraryMember","library");
                });

            modelBuilder.Entity("Module.Library.Entities.MemberStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MemberStatus","library");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Active",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Closed",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Canceled",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Blacklisted",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "None",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Library.Entities.Publisher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Publisher","library");
                });

            modelBuilder.Entity("Module.Library.Entities.Rack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("FloorNo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.ToTable("Rack","library");
                });

            modelBuilder.Entity("Module.Library.Entities.ReservationStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatus","library");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Waiting",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Pending",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Completed",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Canceled",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "None",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Library.Entities.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Subject","library");
                });

            modelBuilder.Entity("Module.Asset.Entities.Accessory", b =>
                {
                    b.HasOne("Module.Asset.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Office", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Module.Asset.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Asset.Entities.AccessoryUser", b =>
                {
                    b.HasOne("Module.Asset.Entities.Accessory", "Accessory")
                        .WithMany("AccessoryUsers")
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "IssuedToUser")
                        .WithMany()
                        .HasForeignKey("IssuedToUserId");
                });

            modelBuilder.Entity("Module.Asset.Entities.Asset", b =>
                {
                    b.HasOne("Module.Asset.Entities.AssetModel", "AssetModel")
                        .WithMany()
                        .HasForeignKey("AssetModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Office", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Module.Asset.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Asset.Entities.AssetAudit", b =>
                {
                    b.HasOne("Module.Asset.Entities.AssetModel", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");
                });

            modelBuilder.Entity("Module.Asset.Entities.AssetMaintenance", b =>
                {
                    b.HasOne("Module.Asset.Entities.AssetModel", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("Module.Asset.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Asset.Entities.AssetModel", b =>
                {
                    b.HasOne("Module.Asset.Entities.AssetModel", null)
                        .WithMany("AssetModels")
                        .HasForeignKey("AssetModelId");

                    b.HasOne("Module.Asset.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Depreciation", "Depreciation")
                        .WithMany()
                        .HasForeignKey("DepreciationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");
                });

            modelBuilder.Entity("Module.Asset.Entities.Category", b =>
                {
                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");
                });

            modelBuilder.Entity("Module.Asset.Entities.Component", b =>
                {
                    b.HasOne("Module.Asset.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Office", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Module.Asset.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Asset.Entities.ComponentAsset", b =>
                {
                    b.HasOne("Module.Asset.Entities.Component", "Component")
                        .WithMany("ComponentAssets")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.AssetModel", "IssuedToAsset")
                        .WithMany()
                        .HasForeignKey("IssuedToAssetId");
                });

            modelBuilder.Entity("Module.Asset.Entities.Consumable", b =>
                {
                    b.HasOne("Module.Asset.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Office", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Module.Asset.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Asset.Entities.ConsumableUser", b =>
                {
                    b.HasOne("Module.Asset.Entities.Consumable", "Consumable")
                        .WithMany("ConsumableUsers")
                        .HasForeignKey("ConsumableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "IssuedToUser")
                        .WithMany()
                        .HasForeignKey("IssuedToUserId");
                });

            modelBuilder.Entity("Module.Asset.Entities.License", b =>
                {
                    b.HasOne("Module.Asset.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Depreciation", "Depreciation")
                        .WithMany()
                        .HasForeignKey("DepreciationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Office", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Asset.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Asset.Entities.LicenseSeat", b =>
                {
                    b.HasOne("Module.Asset.Entities.AssetModel", "IssuedToAsset")
                        .WithMany()
                        .HasForeignKey("IssuedToAssetId");

                    b.HasOne("Module.Core.Entities.User", "IssuedToUser")
                        .WithMany()
                        .HasForeignKey("IssuedToUserId");

                    b.HasOne("Module.Asset.Entities.License", "License")
                        .WithMany("LicenseSeats")
                        .HasForeignKey("LicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Asset.Entities.Manufacturer", b =>
                {
                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");
                });

            modelBuilder.Entity("Module.Core.Entities.Address", b =>
                {
                    b.HasOne("Module.Core.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Module.Core.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("Module.Core.Entities.Upazila", "Upazila")
                        .WithMany()
                        .HasForeignKey("UpazilaId");
                });

            modelBuilder.Entity("Module.Core.Entities.Office", b =>
                {
                    b.HasOne("Module.Core.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Module.Core.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("Module.Core.Entities.Upazila", "Upazila")
                        .WithMany()
                        .HasForeignKey("UpazilaId");
                });

            modelBuilder.Entity("Module.Core.Entities.Permission", b =>
                {
                    b.HasOne("Module.Core.Entities.PermissionGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");
                });

            modelBuilder.Entity("Module.Core.Entities.RolePermission", b =>
                {
                    b.HasOne("Module.Core.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.Upazila", b =>
                {
                    b.HasOne("Module.Core.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Module.Core.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");
                });

            modelBuilder.Entity("Module.Core.Entities.User", b =>
                {
                    b.HasOne("Module.Core.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Module.Core.Entities.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("Module.Core.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Module.Core.Entities.UserPermission", b =>
                {
                    b.HasOne("Module.Core.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.UserProfile", b =>
                {
                    b.HasOne("Module.Core.Entities.BloodGroup", "BloodGroup")
                        .WithMany()
                        .HasForeignKey("BloodGroupId");

                    b.HasOne("Module.Core.Entities.Address", "ContactAddress")
                        .WithMany()
                        .HasForeignKey("ContactAddressId");

                    b.HasOne("Module.Core.Entities.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("Module.Core.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Module.Core.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId");

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Module.Core.Entities.Address", "OfficeAddress")
                        .WithMany()
                        .HasForeignKey("OfficeAddressId");

                    b.HasOne("Module.Core.Entities.Address", "PermanentAddress")
                        .WithMany()
                        .HasForeignKey("PermanentAddressId");

                    b.HasOne("Module.Core.Entities.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Module.Core.Entities.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.UserRole", b =>
                {
                    b.HasOne("Module.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.UserToken", b =>
                {
                    b.HasOne("Module.Core.Entities.RefreshToken", "RefreshToken")
                        .WithMany()
                        .HasForeignKey("RefreshTokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.Book", b =>
                {
                    b.HasOne("Module.Library.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Module.Core.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");

                    b.HasOne("Module.Library.Entities.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");
                });

            modelBuilder.Entity("Module.Library.Entities.BookAuthor", b =>
                {
                    b.HasOne("Module.Library.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.BookEdition", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.EBook", "EBook")
                        .WithMany()
                        .HasForeignKey("EBookId");
                });

            modelBuilder.Entity("Module.Library.Entities.BookIssue", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.BookReservation", "ConvertedFromReservation")
                        .WithMany()
                        .HasForeignKey("ConvertedFromReservationId");

                    b.HasOne("Module.Library.Entities.Fine", "Fine")
                        .WithMany()
                        .HasForeignKey("FineId");

                    b.HasOne("Module.Library.Entities.LibraryCard", "LibraryCard")
                        .WithMany()
                        .HasForeignKey("LibraryCardId");

                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");

                    b.HasOne("Module.Core.Entities.User", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("Module.Library.Entities.BookItem", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.BookIssue", "CurrentIssue")
                        .WithOne("BookItem")
                        .HasForeignKey("Module.Library.Entities.BookItem", "CurrentIssueId");

                    b.HasOne("Module.Library.Entities.BookEdition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId");

                    b.HasOne("Module.Library.Entities.BookFormat", "Format")
                        .WithMany()
                        .HasForeignKey("FormatId");

                    b.HasOne("Module.Core.Entities.User", "IssuedTo")
                        .WithMany()
                        .HasForeignKey("IssuedToId");

                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Module.Library.Entities.Rack", "Rack")
                        .WithMany()
                        .HasForeignKey("RackId");

                    b.HasOne("Module.Core.Entities.User", "ReservedFor")
                        .WithMany()
                        .HasForeignKey("ReservedForId");

                    b.HasOne("Module.Library.Entities.BookStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Module.Library.Entities.BookReservation", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.BookItem", "BookItem")
                        .WithMany()
                        .HasForeignKey("BookItemId");

                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");

                    b.HasOne("Module.Core.Entities.User", "ReservationBy")
                        .WithMany()
                        .HasForeignKey("ReservationById");

                    b.HasOne("Module.Library.Entities.ReservationStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Module.Library.Entities.BookSubject", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.EBook", b =>
                {
                    b.HasOne("Module.Library.Entities.EBookFormat", "Format")
                        .WithMany()
                        .HasForeignKey("FormatId");

                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.Fine", b =>
                {
                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");
                });

            modelBuilder.Entity("Module.Library.Entities.Library", b =>
                {
                    b.HasOne("Module.Core.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Module.Core.Entities.User", "Librarian")
                        .WithMany()
                        .HasForeignKey("LibrarianId");
                });

            modelBuilder.Entity("Module.Library.Entities.LibraryCard", b =>
                {
                    b.HasOne("Module.Library.Entities.LibraryCardStatus", "CardStatus")
                        .WithMany()
                        .HasForeignKey("CardStatusId");

                    b.HasOne("Module.Library.Entities.LibraryCardType", "CardType")
                        .WithMany()
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");

                    b.HasOne("Module.Core.Entities.User", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("Module.Library.Entities.LibraryMember", b =>
                {
                    b.HasOne("Module.Library.Entities.LibraryCard", "CurrentCard")
                        .WithMany()
                        .HasForeignKey("CurrentCardId");

                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.Rack", b =>
                {
                    b.HasOne("Module.Library.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId");
                });
#pragma warning restore 612, 618
        }
    }
}
