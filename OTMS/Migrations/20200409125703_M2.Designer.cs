// <auto-generated />
using System;
using Infrastructure.Data.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace OTMS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200409125703_M2")]
    partial class M2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Module.Core.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("UpazilaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("UpazilaId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Module.Core.Entities.BloodGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BloodGroup");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "A+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "A-",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "B+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "B-",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "AB+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "AB+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "O+",
                            Version = 0L
                        },
                        new
                        {
                            Id = 8L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "O-",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Module.Core.Entities.Designation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Director General",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Director",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Additional Director",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deputy Director or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Assistant Director or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social services officer 1st Class Gazetted or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social services officer 2nd Class Gazetted or Equivalent",
                            Version = 0L
                        },
                        new
                        {
                            Id = 8L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Additional Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 9L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 10L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Joint Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 11L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deputy Secretary",
                            Version = 0L
                        },
                        new
                        {
                            Id = 12L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Honorable Guest Speaker",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("District");
                });

            modelBuilder.Entity("Module.Core.Entities.Gender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Male",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Female",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Other",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Module.Core.Entities.MaritalStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatus");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Married",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "UnMarried",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Widowed",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Divorced",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "NeverMarried",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Media", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Module.Core.Entities.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Module");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User Management",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Library Management",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Code = "user.create",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 101L,
                            Code = "user.update",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 102L,
                            Code = "user.view",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 104L,
                            Code = "user.list",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 103L,
                            Code = "user.delete",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 105L,
                            Code = "user.manage",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 106L,
                            Code = "user.filter",
                            GroupId = 1L,
                            ModuleId = 1L,
                            Name = "Filter"
                        },
                        new
                        {
                            Id = 200L,
                            Code = "role.create",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 201L,
                            Code = "role.update",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 202L,
                            Code = "role.view",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 204L,
                            Code = "role.list",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 203L,
                            Code = "role.delete",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 205L,
                            Code = "role.manage",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 206L,
                            Code = "role.filter",
                            GroupId = 2L,
                            ModuleId = 1L,
                            Name = "Filter"
                        },
                        new
                        {
                            Id = 300L,
                            Code = "designation.create",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 301L,
                            Code = "designation.update",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 302L,
                            Code = "designation.view",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 304L,
                            Code = "designation.list",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 303L,
                            Code = "designation.delete",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 305L,
                            Code = "designation.manage",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 306L,
                            Code = "designation.filter",
                            GroupId = 3L,
                            ModuleId = 1L,
                            Name = "Filter"
                        },
                        new
                        {
                            Id = 400L,
                            Code = "department.create",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 401L,
                            Code = "department.update",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 402L,
                            Code = "department.view",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 404L,
                            Code = "department.list",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 403L,
                            Code = "department.delete",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 405L,
                            Code = "department.manage",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 406L,
                            Code = "department.filter",
                            GroupId = 4L,
                            ModuleId = 1L,
                            Name = "Filter"
                        },
                        new
                        {
                            Id = 500L,
                            Code = "profile.create",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 501L,
                            Code = "profile.update",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 502L,
                            Code = "profile.view",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 504L,
                            Code = "profile.list",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 503L,
                            Code = "profile.delete",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 505L,
                            Code = "profile.manage",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 506L,
                            Code = "profile.filter",
                            GroupId = 5L,
                            ModuleId = 1L,
                            Name = "Filter"
                        },
                        new
                        {
                            Id = 600L,
                            Code = "book.create",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 601L,
                            Code = "book.update",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 602L,
                            Code = "book.view",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "View"
                        },
                        new
                        {
                            Id = 604L,
                            Code = "book.list",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "List"
                        },
                        new
                        {
                            Id = 603L,
                            Code = "book.delete",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 605L,
                            Code = "book.manage",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Manage"
                        },
                        new
                        {
                            Id = 606L,
                            Code = "book.filter",
                            GroupId = 6L,
                            ModuleId = 2L,
                            Name = "Filter"
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.PermissionGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PermissionGroup");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Role",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Designation",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Department",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Profile",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Book",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpiresIn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Module.Core.Entities.Religion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Religion");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Islam",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Judaism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hinduism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Christianity",
                            Version = 0L
                        },
                        new
                        {
                            Id = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Buddhism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jainism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sikhism",
                            Version = 0L
                        },
                        new
                        {
                            Id = 8L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Other",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrator",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PermissionId = 105L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            PermissionId = 205L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            PermissionId = 305L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            PermissionId = 405L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            PermissionId = 505L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Status", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Pending",
                            Version = 0L
                        },
                        new
                        {
                            Id = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Approved",
                            Version = 0L
                        },
                        new
                        {
                            Id = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Active",
                            Version = 0L
                        },
                        new
                        {
                            Id = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "InActive",
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.Upazila", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Upazila");
                });

            modelBuilder.Entity("Module.Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            IsActive = true,
                            IsDeleted = false,
                            Password = "l+0iiqNIdYjDQHR9FwJTzA==",
                            TwoFactorEnabled = false,
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.UserEducation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PassingYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("University")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserProfileId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserEducation");
                });

            modelBuilder.Entity("Module.Core.Entities.UserPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PermissionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PermissionId1")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId1");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("Module.Core.Entities.UserProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BloodGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContactAddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GenderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MaritalStatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PermanentAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BloodGroupId");

                    b.HasIndex("ContactAddressId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("MediaId");

                    b.HasIndex("PermanentAddressId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Module.Core.Entities.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1L,
                            UserId = 1L,
                            Version = 0L
                        });
                });

            modelBuilder.Entity("Module.Core.Entities.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresIn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RefreshTokenId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RefreshTokenId");

                    b.HasIndex("UserId");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("Module.Library.Entities.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Module.Library.Entities.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Binding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BookShelfId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasEBook")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("LanguageId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<long>("PublisherId")
                        .HasColumnType("bigint");

                    b.Property<int>("RackNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BookShelfId");

                    b.HasIndex("LanguageId1");

                    b.HasIndex("PublisherId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Module.Library.Entities.BookAuthor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthor");
                });

            modelBuilder.Entity("Module.Library.Entities.BookEdition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Edition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookEdition");
                });

            modelBuilder.Entity("Module.Library.Entities.BookRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AcceptById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("AcceptDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("RequestDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AcceptById");

                    b.HasIndex("BookId");

                    b.HasIndex("RequestById");

                    b.ToTable("BookRequest");
                });

            modelBuilder.Entity("Module.Library.Entities.BookShelf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalRackCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BookShelf");
                });

            modelBuilder.Entity("Module.Library.Entities.BookSubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("SubjectId");

                    b.ToTable("BookSubject");
                });

            modelBuilder.Entity("Module.Library.Entities.EBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Format")
                        .HasColumnType("tinyint");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("EBook");
                });

            modelBuilder.Entity("Module.Library.Entities.Issue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("ExpireDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForLibraryRead")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("IssueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MemberLibraryCardId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ReturnedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberLibraryCardId");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("Module.Library.Entities.LibraryCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("ExpireDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<float>("Fees")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxLendIssueCount")
                        .HasColumnType("int");

                    b.Property<int>("MaxReadIssueCount")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LibraryCard");
                });

            modelBuilder.Entity("Module.Library.Entities.MemberLibraryCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LibraryCardId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LibraryCardId");

                    b.HasIndex("UserId");

                    b.ToTable("MemberLibraryCard");
                });

            modelBuilder.Entity("Module.Library.Entities.Publisher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("Module.Library.Entities.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Module.Core.Entities.Address", b =>
                {
                    b.HasOne("Module.Core.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Module.Core.Entities.Upazila", "Upazila")
                        .WithMany()
                        .HasForeignKey("UpazilaId");
                });

            modelBuilder.Entity("Module.Core.Entities.Permission", b =>
                {
                    b.HasOne("Module.Core.Entities.PermissionGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");
                });

            modelBuilder.Entity("Module.Core.Entities.RolePermission", b =>
                {
                    b.HasOne("Module.Core.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.User", b =>
                {
                    b.HasOne("Module.Core.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Module.Core.Entities.UserEducation", b =>
                {
                    b.HasOne("Module.Core.Entities.UserProfile", "UserProfile")
                        .WithMany("Educations")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.UserPermission", b =>
                {
                    b.HasOne("Module.Core.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId1");

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.UserProfile", b =>
                {
                    b.HasOne("Module.Core.Entities.BloodGroup", "BloodGroup")
                        .WithMany()
                        .HasForeignKey("BloodGroupId");

                    b.HasOne("Module.Core.Entities.Address", "ContactAddress")
                        .WithMany()
                        .HasForeignKey("ContactAddressId");

                    b.HasOne("Module.Core.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Module.Core.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId");

                    b.HasOne("Module.Core.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Module.Core.Entities.Address", "PermanentAddress")
                        .WithMany()
                        .HasForeignKey("PermanentAddressId");

                    b.HasOne("Module.Core.Entities.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.UserRole", b =>
                {
                    b.HasOne("Module.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Core.Entities.UserToken", b =>
                {
                    b.HasOne("Module.Core.Entities.RefreshToken", "RefreshToken")
                        .WithMany()
                        .HasForeignKey("RefreshTokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.Book", b =>
                {
                    b.HasOne("Module.Library.Entities.BookShelf", "BookShelf")
                        .WithMany()
                        .HasForeignKey("BookShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId1");

                    b.HasOne("Module.Library.Entities.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.BookAuthor", b =>
                {
                    b.HasOne("Module.Library.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.BookEdition", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.BookRequest", b =>
                {
                    b.HasOne("Module.Core.Entities.User", "AcceptBy")
                        .WithMany()
                        .HasForeignKey("AcceptById");

                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "RequestBy")
                        .WithMany()
                        .HasForeignKey("RequestById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.BookSubject", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Library.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.EBook", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Module.Library.Entities.Issue", b =>
                {
                    b.HasOne("Module.Library.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("Module.Library.Entities.MemberLibraryCard", "MemberLibraryCard")
                        .WithMany()
                        .HasForeignKey("MemberLibraryCardId");
                });

            modelBuilder.Entity("Module.Library.Entities.MemberLibraryCard", b =>
                {
                    b.HasOne("Module.Library.Entities.LibraryCard", "LibraryCard")
                        .WithMany()
                        .HasForeignKey("LibraryCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
